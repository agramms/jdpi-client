name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.0', '3.1', '3.2', '3.3', '3.4']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
        cache-version: 1
      env:
        BUNDLE_GEMFILE: ${{ github.workspace }}/Gemfile

    - name: Install dependencies
      run: |
        gem update --system
        bundle config set --local deployment false
        bundle config set --local path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Run linter
      run: bundle exec rubocop

    - name: Run tests with coverage
      run: bundle exec rake ci
      env:
        COVERAGE: true
        CI: true
        RAILS_ENV: test

    - name: Upload coverage reports
      if: matrix.ruby-version == '3.2'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        retention-days: 30

    - name: Comment coverage on PR
      if: github.event_name == 'pull_request' && matrix.ruby-version == '3.2'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'coverage/.last_run.json';
          if (fs.existsSync(path)) {
            const coverage = JSON.parse(fs.readFileSync(path, 'utf8'));
            const percentage = coverage.result.line;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ“Š **Test Coverage**: ${percentage}%\n\n[View detailed coverage report](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
            });
          }

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        cache-version: 1

    - name: Install dependencies
      run: |
        gem update --system
        bundle install --jobs 4 --retry 3

    - name: Build gem
      run: gem build jdpi_client.gemspec

    - name: Validate gem
      run: gem install jdpi_client-*.gem --local